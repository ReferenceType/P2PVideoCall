<Window x:Class="Videocall.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Videocall"
        mc:Ignorable="d"
        WindowStyle="None"
        AllowsTransparency="False"
        ResizeMode="CanResize"
        MaxHeight="{Binding Source={x:Static SystemParameters.MaximizedPrimaryScreenHeight}}"
        Closing="Window_Closing"
        StateChanged="Window_StateChanged"
        Deactivated="Window_Deactivated"
        Activated="Window_Activated"
        Title="VideoCall" 
        Icon="Resources/favicon2.ico"
        Height="{Binding MainWindowViewModel.WindowHeight, Mode=TwoWay}" MinHeight="550" Width="{Binding MainWindowViewModel.WindowWidth, Mode=TwoWay}"
        BorderThickness="1,1,1,1" BorderBrush="#505050">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </Window.Resources>
    <Grid Background="#181818">


        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Background="#363636">
            <Button Content="╳" HorizontalAlignment="Right" VerticalAlignment="Top" Height="24" Margin="0,0,0,0" Width="33" Click="CloseBtnClick" WindowChrome.IsHitTestVisibleInChrome="True" />
            <Button Content="🗖" HorizontalAlignment="Right" VerticalAlignment="Top" Height="24" Margin="0,0,35,0" Width="33" Click="MaximizeBtcClicked" WindowChrome.IsHitTestVisibleInChrome="True"/>
            <Button Content="🗕" HorizontalAlignment="Right" VerticalAlignment="Top" Height="24" Margin="0,0,70,0" Width="33" Click="MinimizeBtnClick" WindowChrome.IsHitTestVisibleInChrome="True"/>
            <Image Margin="10,3,0,0" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" Width="20" Source="{StaticResource AppIcon}"/>
        </Grid>

        <TabControl Background="#181818" BorderBrush="#181818" Margin="0,10,0,0" Grid.Row="1" BorderThickness="0,0,0,0" >
            <TabItem Header="Main" Width="80" Height="30" Foreground="WhiteSmoke">
                <Grid Background="#FF202020" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="PeersGridColumn" Width="200" MinWidth="200"/>
                        <ColumnDefinition Width="3"/>
                        <ColumnDefinition x:Name="CamGridColumn" Width="*" />
                        <ColumnDefinition Width="3"/>
                        <ColumnDefinition x:Name="ChatGridColumn" Width="1.0001*"  MinWidth="280"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0">
                        <Grid>
                            <Button x:Name="PeersHideButton" Click="PeersHideButton_Click" Content="&lt;&lt;" HorizontalAlignment="Right" Margin="0,0,-23,2" VerticalAlignment="Bottom" Width="20"/>
                            <ListView Name="lvUsers" Margin="0,49,0,96"  ItemsSource ="{Binding MainWindowViewModel.PeerInfos}" Background="#262626" BorderBrush="#262626"
                                      SelectedItem="{Binding MainWindowViewModel.SelectedItem}">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="Background" Value="#242424" />
                                    </Style>
                                </ListView.ItemContainerStyle>

                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid HorizontalAlignment="Left" >
                                            <DockPanel Width="auto" LastChildFill="True" HorizontalAlignment="Stretch">

                                                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                                                    <TextBlock  Style="{StaticResource WhiteText}" Text="Name" HorizontalAlignment="Left"  TextWrapping="Wrap"  VerticalAlignment="Top" Width="80"  />
                                                    <TextBlock  Style="{StaticResource WhiteText}" Text="{Binding Name}" HorizontalAlignment="Stretch"  TextWrapping="Wrap"  VerticalAlignment="Top" />
                                                </StackPanel>

                                                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                                                    <TextBlock  Style="{StaticResource WhiteText}" Text="Ip" HorizontalAlignment="Left"  TextWrapping="Wrap"  VerticalAlignment="Top" Width="80" />
                                                    <TextBlock  Style="{StaticResource WhiteText}" Text="{Binding Ip}" HorizontalAlignment="Stretch"  TextWrapping="Wrap"  VerticalAlignment="Bottom"  />
                                                </StackPanel>

                                                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                                                    <TextBlock DockPanel.Dock="Left" Style="{StaticResource WhiteText}" Text="Tcp Latency" HorizontalAlignment="Left"  TextWrapping="Wrap"  VerticalAlignment="Top" Width="80" />
                                                    <TextBlock DockPanel.Dock="Top" Style="{StaticResource WhiteText}"  Text="{Binding TcpLatency}" HorizontalAlignment="Stretch"  TextWrapping="Wrap"  VerticalAlignment="Bottom"  />
                                                </StackPanel>

                                                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                                                    <TextBlock Style="{StaticResource WhiteText}" Text="Udp Latency" HorizontalAlignment="Left"  TextWrapping="Wrap"  VerticalAlignment="Top" Width="80" />
                                                    <TextBlock DockPanel.Dock="Top" Style="{StaticResource WhiteText}" Text="{Binding UdpLatency}" HorizontalAlignment="Stretch"  TextWrapping="Wrap"  VerticalAlignment="Bottom"  />
                                                </StackPanel>

                                            </DockPanel>

                                        </Grid>

                                    </DataTemplate>

                                </ListView.ItemTemplate>


                            </ListView>
                            <Button Content="Call Selected" HorizontalAlignment="Left"  VerticalAlignment="Bottom" Height="32" Width="177" Command="{Binding MainWindowViewModel.CallSelectedCommand }" Margin="10,0,0,37"/>
                            <TextBlock HorizontalAlignment="Left" Margin="10,28,0,0" TextWrapping="Wrap" Text="Online Peers" VerticalAlignment="Top" Width="177"/>
                            <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" TextWrapping="Wrap" Text="Status:" VerticalAlignment="Top" Width="177"/>
                            <TextBox Text="{Binding Path=(local:CallStateManager.CurrentState)}" Height="18" Width="111"  BorderThickness="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="79,0,0,0" />

                        </Grid>
                    </Grid>

                    <GridSplitter HorizontalAlignment="Right" VerticalAlignment="Stretch" Grid.Column="1" ResizeBehavior="PreviousAndNext" Width="5" Background="#181818"/>
                    <!--Camera Image-->
                    <Grid Grid.Column="2">
                        <Grid >
                            <Image x:Name="MainVideoCanvas" HorizontalAlignment="Left" Height="auto" Margin="10,10,0,75" VerticalAlignment="Top" Width="auto" Source="{Binding MainWindowViewModel.PrimaryCanvasSource }" />
                            <Grid>
                                <Image x:Name="SecondaryVideoCanvas" HorizontalAlignment="Right" Height="122" Margin="10,10,0,0" VerticalAlignment="Top" Width="167" Source="{Binding MainWindowViewModel.SecondaryCanvasSource }"/>
                            </Grid>
                        </Grid>

                        <Button Content="EndCall" Visibility="{Binding MainWindowViewModel.EndCallVisibility, Converter={StaticResource BoolToVis}}" HorizontalAlignment="Left"  VerticalAlignment="Bottom" Height="32" Width="56" Command="{Binding MainWindowViewModel.EndCallCommand }" Margin="10,0,0,36"/>
                        <Label Content="Share Screen" Visibility="{Binding MainWindowViewModel.EndCallVisibility, Converter={StaticResource BoolToVis}}" HorizontalAlignment="Left" Margin="82,0,0,39" VerticalAlignment="Bottom" FontWeight="Bold"/>
                        <ToggleButton  Style="{StaticResource ToggleSwitch}" Visibility="{Binding MainWindowViewModel.EndCallVisibility, Converter={StaticResource BoolToVis}}" HorizontalAlignment="Left" Margin="164,0,0,36" VerticalAlignment="Bottom" Width="78" Height="32" 
                          IsChecked="{Binding MainWindowViewModel.ShareScreenChecked,Mode=TwoWay}" />

                    </Grid>

                    <GridSplitter HorizontalAlignment="Right" VerticalAlignment="Stretch" Grid.Column="3" ResizeBehavior="PreviousAndNext" Width="5" Background="#181818" />
                    <!--Chat-->
                    <Grid Background="#202020" Grid.Column="4" AllowDrop="True" Drop="MessageWindow_Drop" HorizontalAlignment="Stretch"  >
                        <Grid x:Name="ChatGrid" Margin="10,67,5,90" >

                            <ListView x:Name="ChatView" ItemsSource ="{Binding MainWindowViewModel.ChatData}" Background="Black"  BorderThickness="0" ScrollViewer.CanContentScroll="False" ScrollViewer.ScrollChanged="ChatView_ScrollChanged">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Style.Triggers>
                                            <Trigger Property="Control.IsMouseOver" Value="True">
                                                <Setter Property="Control.Background" Value="Transparent" />
                                            </Trigger>
                                        </Style.Triggers>
                                        <Setter Property="BorderBrush" Value="Transparent" />
                                        <Setter Property="BorderThickness" Value="0" />

                                        <Setter Property="Background" Value="Black" />
                                        <Setter Property="Foreground" Value="Transparent" />
                                        <Setter Property="Focusable" Value="false"/>
                                        <Setter Property="HorizontalAlignment" Value="{Binding Allignment}" />
                                    </Style>

                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid HorizontalAlignment="Left" MaxWidth="{Binding ElementName=ChatGrid,Path=ActualWidth }" >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="5*" />
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid Grid.Column="0">

                                                <!--Margin="-3,20,-3,0"-->
                                                <Rectangle Margin="-5,-3,-5,-5" Fill="Black" HorizontalAlignment="Stretch" Height="auto" Stroke="Transparent" VerticalAlignment="Stretch" Width="auto" RadiusX="3.944" RadiusY="3.944"/>
                                                <Rectangle Margin="{Binding RectMargin}"  HorizontalAlignment="Stretch" Height="auto" Stroke="Transparent" VerticalAlignment="Stretch" Width="auto" RadiusX="3.944" RadiusY="3.944">
                                                    <Rectangle.Fill>
                                                        <SolidColorBrush Color="{Binding BackgroundColor}"/>
                                                    </Rectangle.Fill>
                                                </Rectangle>

                                                <StackPanel Margin="5,0,0,0">
                                                    <TextBlock Margin="0,0,0,0" Style="{StaticResource WhiteText}" Text="{Binding Sender}" HorizontalAlignment= "{Binding Allignment}"  TextWrapping="Wrap"  VerticalAlignment="Center" Foreground="DimGray"
                                                               Height="{Binding SenderTextHeight}"/>

                                                    <StackPanel Margin="0,10,10,0">
                                                        <TextBox BorderThickness="0" Style="{StaticResource BorderlessTextBox}" IsReadOnly="True"   Text="{Binding Message, Mode=OneWay}" HorizontalAlignment= "Left"  TextWrapping="Wrap"  VerticalAlignment="Center"  FontSize="14"/>
                                                        <TextBlock VerticalAlignment="Center" Height="{Binding URIHeight}">
                                                    <Hyperlink NavigateUri="{Binding URI}" RequestNavigate="OnHyperlinkClicked" Foreground="DodgerBlue">
                                                        <!--<TextBlock Text="{Binding URI}" FontSize="14" />-->
                                                        <TextBlock TextWrapping="Wrap" TextDecorations="Underline"><Run FontWeight="Bold" Text="{Binding URI}" /></TextBlock>
                                                    </Hyperlink>                
                                                </TextBlock>
                                                        <TextBlock Margin="0,10,0,0" Style="{StaticResource WhiteText}"  Text="{Binding Time}" HorizontalAlignment= "{Binding Allignment}"  TextWrapping="Wrap"  VerticalAlignment="Center" Foreground="DimGray" />

                                                    </StackPanel>
                                                </StackPanel>
                                            </Grid>
                                        </Grid>

                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>

                        </Grid>


                        <Label x:Name="WriteMsgGhostText" Content="Write message.." HorizontalAlignment="Left" Margin="16,0,0,27" VerticalAlignment="Bottom" Width="112"/>

                        <Button Content="Send" HorizontalAlignment="Right" Margin="0,0,5,10" VerticalAlignment="Bottom"  Height="61" Width="45" Command="{Binding MainWindowViewModel.SendTextCommand }" />
                        <TextBox Style="{StaticResource RoundTextBox}" x:Name="ChatMessageBox"  TextWrapping="Wrap" Height="61" Margin="10,0,55,10" Width=" auto" MinWidth="50" VerticalAlignment="Bottom"   PreviewKeyDown ="OnKeyDownHandler" Foreground="White" Background="#262626" Cursor="Pen" CaretBrush="White" FontWeight="Bold" Opacity="0.8"  AcceptsReturn="True" BorderBrush="DimGray" 
                                 Text="{Binding MainWindowViewModel.ChatInputText, Mode=TwoWay }" FontSize="14" GotFocus="ChatMessageBox_GotFocus" LostFocus="ChatMessageBox_LostFocus"/>

                        <Rectangle  Height="53" Margin="10,10,5,0" Stroke="#FFCEC7C7" VerticalAlignment="Top" Width="auto"  StrokeThickness="2" RadiusX="5.259" RadiusY="5.259" />

                        <Label Content="Drag &amp; Drop Folder or File.." HorizontalAlignment="Left" Margin="10,11,0,0" VerticalAlignment="Top" Width="222"/>
                        <Label x:Name="FTProgressText" HorizontalAlignment="left" Margin="10,34,0,0" VerticalAlignment="Top" Width="auto" 
                               Content="{Binding MainWindowViewModel.FTProgressText }"/>

                    </Grid>
                    <Button x:Name="ChatHideButton" Content="&gt;&gt;" HorizontalAlignment="Left" Margin="-21,0,0,2" VerticalAlignment="Bottom" Grid.Column="3" Click="ChatHideButton_Click" Width=" 20"/>


                </Grid>

            </TabItem>

            <!--Settings-->
            <TabItem Header="Settings" Width="80" Height="30" Foreground="WhiteSmoke">
                <Grid Background="#FF1E1E1E">
                    <StackPanel>
                        <Grid Width="788" HorizontalAlignment="Left">
                            <Rectangle HorizontalAlignment="Center" Height="223" Margin="0,10,0,0" Stroke="DimGray" VerticalAlignment="Top" Width="788"/>

                            <Label Content="IP/Host" HorizontalAlignment="Left" Margin="34,32,0,0" VerticalAlignment="Top"/>
                            <TextBox x:Name="IpText" HorizontalAlignment="Left" Margin="89,36,0,0" TextWrapping="Wrap"
                                     Text="{Binding SettingsViewModel.Config.Ip}" VerticalAlignment="Top" Width="120" />
                            <Label Content="Port" HorizontalAlignment="Left" Margin="34,63,0,0" VerticalAlignment="Top"/>
                            <TextBox x:Name="PortText" HorizontalAlignment="Left" Margin="89,67,0,0" TextWrapping="Wrap"
                                     Text="{Binding SettingsViewModel.Config.Port}" VerticalAlignment="Top" Width="120" />
                            <Label  Content="UserName" HorizontalAlignment="Left" Margin="256,32,0,0" VerticalAlignment="Top"/>
                            <TextBox x:Name="UserName" HorizontalAlignment="Left" Margin="339,36,0,0" TextWrapping="Wrap"
                                     Text="{Binding SettingsViewModel.Config.Name}" VerticalAlignment="Top" Width="120" />
                            <Label Content="Transport Layer" HorizontalAlignment="Left" Margin="246,73,0,0" VerticalAlignment="Top"/>

                            <ComboBox x:Name="SoundQuality_Copy" HorizontalAlignment="Left" Margin="339,73,0,0" VerticalAlignment="Top" Width="120" IsReadOnly="True" 
                              SelectedItem="{Binding SettingsViewModel.TransportLayer,Mode=TwoWay}" IsSynchronizedWithCurrentItem="True" >
                                <ComboBoxItem  Content="Udp" IsSelected="True"/>
                                <ComboBoxItem  Content="Tcp"/>
                            </ComboBox>

                            <Button Content="Connect" HorizontalAlignment="Left" Margin="11,132,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.883,-2.553" Width="78" 
                             Command="{Binding SettingsViewModel.ConnectButtonClickCommand}" >
                                <Button.Effect>
                                    <DropShadowEffect/>
                                </Button.Effect>
                            </Button>
                            <Button Content="Disconnect" HorizontalAlignment="Left" Margin="11,164,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.883,-2.553" Width="78"
                            Command="{Binding SettingsViewModel.DisconnectButtonClickCommand}" >
                                <Button.Effect>
                                    <DropShadowEffect/>
                                </Button.Effect>
                            </Button>
                            <Button Content="TryPunchHole" HorizontalAlignment="Left" Margin="10,193,0,0" VerticalAlignment="Top" Width="79"
                             Command="{Binding SettingsViewModel.HolePunchClickCommand}" >
                                <Button.Effect>
                                    <DropShadowEffect/>
                                </Button.Effect>
                            </Button>

                            <TextBlock x:Name="ServerTcpLatency" HorizontalAlignment="Left" Margin="140,111,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="160"
                               Text="{Binding SettingsViewModel.TcpLatency}"/>
                            <TextBlock x:Name="ServerUdpLatency" HorizontalAlignment="Left" Margin="309,111,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="160"
                               Text="{Binding SettingsViewModel.UdpLatency}"/>

                            <TextBox x:Name="Status" HorizontalAlignment="Left" Margin="103,132,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="356" Height="81" 
                             Text="{Binding SettingsViewModel.LogText}" TextChanged="Status_TextChanged"/>

                            <CheckBox Content="Auto Reconnect" Foreground="WhiteSmoke" Margin="502,36,170,177"  
                                      IsChecked="{Binding  SettingsViewModel.Config.AutoReconnect}" Height="20"/>
                            <CheckBox Content="Auto HolePunch" Foreground="WhiteSmoke" Margin="502,77,170,136" 
                                      IsChecked="{Binding  SettingsViewModel.Config.AutoHolepunch}" Height="20"/>


                            <Button Content="Get Ip With Proxy" HorizontalAlignment="Left" Margin="655,40,0,0" VerticalAlignment="Top" Width="104" 
                            Command="{Binding SettingsViewModel.HTTPProxtIpCommand}"/>
                            <Button Content="Show Debug Log" HorizontalAlignment="Left" Margin="655,80,0,0" VerticalAlignment="Top" Width="104" Click="ShowDebugWindow"/>
                            <Button Content="Clear Chat History" HorizontalAlignment="Left" Margin="655,118,0,0" VerticalAlignment="Top" Width="104"
                                     Command="{Binding SettingsViewModel.ClearChatHistoryCommand}"/>
                            <Label  Content="FileTransferChunkSize" HorizontalAlignment="Left" Margin="647,168,0,0" VerticalAlignment="Top"/>

                            <TextBox x:Name="FtChunk" HorizontalAlignment="Left" Margin="651,199,0,0" TextWrapping="Wrap"
                                     Text="{Binding SettingsViewModel.Config.ChunkSize}" VerticalAlignment="Top" Width="112" />

                        </Grid>
                        <!--Bottom-->

                        <Grid HorizontalAlignment="Left" VerticalAlignment="Bottom" Height="240" >
                            <StackPanel Orientation="Horizontal">
                                <Grid HorizontalAlignment="Left" >
                                    <Rectangle HorizontalAlignment="Left" Height="240" Stroke="DimGray" VerticalAlignment="Center" Width="197" RadiusX="3.944" RadiusY="3.944"/>
                                    <Label Content="Video Settings" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Top"/>
                                    <CheckBox IsChecked="{Binding SettingsViewModel.EnableCongestionControl, Mode=TwoWay}"  Content="Enable Congestion Control" Foreground="WhiteSmoke" Margin="7,41,0,0" Height="20" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                    <Label Content="Image Quality" HorizontalAlignment="Left" Margin="5,61,0,0" VerticalAlignment="Top"/>
                                    <Label Content="{Binding SettingsViewModel.ActualImageQuality}" HorizontalAlignment="Left" Margin="95,60,0,0" VerticalAlignment="Top"/>

                                    <Slider x:Name="VideoQualitySlider" HorizontalAlignment="Left" Margin="7,85,0,0" VerticalAlignment="Top" Width="186" AutoToolTipPlacement="TopLeft" AutoToolTipPrecision="3"
                                Value="{Binding SettingsViewModel.ImageQualitySliderValue, Mode=TwoWay}" Maximum="100" />

                                    <Label Content="FPS" HorizontalAlignment="Left" Margin="6,105,0,0" VerticalAlignment="Top"/>
                                    <Slider HorizontalAlignment="Center" Margin="0,130,0,0" VerticalAlignment="Top" Width="186" AutoToolTipPlacement="TopLeft" AutoToolTipPrecision="3" Minimum="5" Maximum="60" 
                                Value="{Binding SettingsViewModel.FpsSliderValue}"/>

                                    <Label Content="CompressionType:" HorizontalAlignment="Left" Margin="2,161,0,0" VerticalAlignment="Top"/>

                                    <ComboBox HorizontalAlignment="Left" Margin="115,163,0,0" VerticalAlignment="Top" Width="72" IsReadOnly="True" 
                                    SelectedItem="{Binding SettingsViewModel.CompressionFormat,Mode=TwoWay}" IsSynchronizedWithCurrentItem="True">
                                        <ComboBoxItem IsSelected="True" Content="Webp" />
                                        <ComboBoxItem  Content="Jpg"/>

                                    </ComboBox>
                                    <Label Content="{Binding SettingsViewModel.ImageTransferRate}" HorizontalAlignment="Left" Margin="5,195,0,0" VerticalAlignment="Top" Width="182"/>
                                    <Label Content="{Binding SettingsViewModel.AverageLatency}" HorizontalAlignment="Left" Margin="5,213,0,0" VerticalAlignment="Top" Width="182"/>
                                </Grid>
                                <Grid Width="4"/>
                                <Grid HorizontalAlignment="Left">
                                    <Rectangle HorizontalAlignment="Left" Height="240"  Stroke="DimGray" VerticalAlignment="Center" Width="197" RadiusX="4.167" RadiusY="4.167"/>
                                    <Label Content="Audio Settings" HorizontalAlignment="Center"  VerticalAlignment="Top"/>

                                    <CheckBox Foreground="WhiteSmoke" Content="Listen Yourself" HorizontalAlignment="Left" Margin="5,39,0,0" VerticalAlignment="Top" 
                                  IsChecked="{Binding SettingsViewModel.ListenYourselfCheck}"/>
                                    <CheckBox Foreground="WhiteSmoke" Content="SendDoubleAudio" HorizontalAlignment="Left" Margin="5,64,0,0" VerticalAlignment="Top" 
                                  IsChecked="{Binding SettingsViewModel.SendDoubleAudiocheck}"  />

                                    <Label Content="Volume" HorizontalAlignment="Left" Margin="5,84,0,0" VerticalAlignment="Top"/>
                                    <Slider HorizontalAlignment="Left" Margin="5,115,0,0" VerticalAlignment="Top" Width="185" AutoToolTipPlacement="TopLeft" AutoToolTipPrecision="3"  Maximum="50"
                                Value="{Binding SettingsViewModel.VolumeValue}"/>

                                    <Label Content="Jitter Buffer Duration" HorizontalAlignment="Left" Margin="5,138,0,0" VerticalAlignment="Top"/>
                                    <Slider HorizontalAlignment="Left" Margin="5,164,0,0" VerticalAlignment="Top" Width="185" AutoToolTipPlacement="TopLeft" AutoToolTipPrecision="3" Maximum="600" Minimum="60"
                                Value="{Binding SettingsViewModel.BufferDurationValue}"/>
                                </Grid>
                                <Grid Width="4"/>
                                <Grid HorizontalAlignment="Left">
                                    <Rectangle HorizontalAlignment="Left" Height="240" Margin="0,0,0,0" Stroke="DimGray" VerticalAlignment="Center" Width="197" RadiusX="4.167" RadiusY="4.167"/>
                                    <TextBlock HorizontalAlignment="Center" Margin="0,5,0,0" TextWrapping="Wrap" Text="Audio Statistics" VerticalAlignment="Top"/>
                                    <TextBlock HorizontalAlignment="Left" Margin="5,46,0,0" TextWrapping="Wrap" Text="Buffer Level" VerticalAlignment="Top"/>
                                    <ProgressBar HorizontalAlignment="Left" Height="10" Margin="90,49,0,0" VerticalAlignment="Top" Width="100" Background="Black"
                                     Value="{Binding SettingsViewModel.BufferedDurationPercentage}"/>

                                    <TextBlock HorizontalAlignment="Left" Margin="5,80,0,0" TextWrapping="Wrap" 
                                   Text="{Binding SettingsViewModel.TotalNumLostPackages}" VerticalAlignment="Top"/>
                                    <TextBlock HorizontalAlignment="Left" Margin="5,111,0,0" TextWrapping="Wrap" 
                                   Text="{Binding SettingsViewModel.PackageLossRate}" VerticalAlignment="Top"/>
                                </Grid>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>
        <Grid Grid.Row="1">
            <Label Content="Camera" HorizontalAlignment="Right" Margin="0,10,80,0" VerticalAlignment="Top" Background="#00000000" Foreground="#FFF7F7F7" FontWeight="Bold"/>
            <ToggleButton Style="{StaticResource CameraToggle}" x:Name="CameraButton" Content="Camera" HorizontalAlignment="Right" Margin="0,8,10,0" VerticalAlignment="Top" Width="78" Height="32"
                          IsChecked="{Binding MainWindowViewModel.CameraChecked,Mode=TwoWay}" />

            <Label Content="Microphone" HorizontalAlignment="Right" Margin="0,11,211,0" VerticalAlignment="Top" FontWeight="Bold"/>
            <ToggleButton Style="{StaticResource MicToggle}" x:Name="SoundButton" Content="Sound" HorizontalAlignment="Right" Margin="0,8,133,0" VerticalAlignment="Top" Width="78" Height="32" 
                          IsChecked="{Binding MainWindowViewModel.MicroponeChecked,Mode=TwoWay}" />
            <!--<Button Content="Button" HorizontalAlignment="Left" Margin="162,431,0,0" VerticalAlignment="Top" Click="Button_Click"/>-->

        </Grid>

    </Grid>

</Window>
