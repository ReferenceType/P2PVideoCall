<Window x:Class="Videocall.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Videocall"
        mc:Ignorable="d"
        WindowStyle="None"
        AllowsTransparency="False"
        ResizeMode="CanResize"
        MaxHeight="{Binding Source={x:Static SystemParameters.MaximizedPrimaryScreenHeight}}"
        Closing="Window_Closing"
        StateChanged="Window_StateChanged"
        Deactivated="Window_Deactivated"
        Activated="Window_Activated"
        Title="VideoCall" 
        Icon="Resources/favicon2.ico"
        Height="{Binding MainWindowViewModel.WindowHeight, Mode=TwoWay}" MinHeight="670" Width="{Binding MainWindowViewModel.WindowWidth, Mode=TwoWay}" MinWidth="810"
        xmlns:uc="clr-namespace:Videocall.UserControls"
        xmlns:sm="clr-namespace:ServiceProvider.Services.Audio"
        BorderThickness="1,1,1,1" BorderBrush="#505050">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </Window.Resources>
    <Grid Background="#181818">


        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Background="#363636">
            <Button Content="╳" HorizontalAlignment="Right" VerticalAlignment="Top" Height="24" Margin="0,0,0,0" Width="33" Click="CloseBtnClick" WindowChrome.IsHitTestVisibleInChrome="True" />
            <Button Content="🗖" HorizontalAlignment="Right" VerticalAlignment="Top" Height="24" Margin="0,0,35,0" Width="33" Click="MaximizeBtcClicked" WindowChrome.IsHitTestVisibleInChrome="True"/>
            <Button Content="🗕" HorizontalAlignment="Right" VerticalAlignment="Top" Height="24" Margin="0,0,70,0" Width="33" Click="MinimizeBtnClick" WindowChrome.IsHitTestVisibleInChrome="True"/>
            <Image Margin="10,3,0,0" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" Width="20" Source="{StaticResource AppIcon}"/>
        </Grid>

        <TabControl Background="#181818" BorderBrush="#181818" Margin="0,10,0,0" Grid.Row="1" BorderThickness="0,0,0,0" >
            <TabItem Header="Main" Width="80" Height="30" Foreground="WhiteSmoke">
                <Grid Background="#FF202020" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="PeersGridColumn" Width="200" MinWidth="200"/>
                        <ColumnDefinition Width="3"/>
                        <ColumnDefinition x:Name="CamGridColumn" Width="*" />
                        <ColumnDefinition Width="3"/>
                        <ColumnDefinition x:Name="ChatGridColumn" Width="1.0001*"  MinWidth="280"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0">
                        <Grid>
                            <Button x:Name="PeersHideButton" Click="PeersHideButton_Click" Content="&lt;&lt;" HorizontalAlignment="Right" Margin="0,0,-23,2" VerticalAlignment="Bottom" Width="20"/>
                            <ListView Name="lvUsers" Margin="0,49,0,96"  ItemsSource ="{Binding MainWindowViewModel.PeerInfos}" Background="#262626" BorderBrush="#262626"
                                      SelectedItem="{Binding MainWindowViewModel.SelectedItem}">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="Background" Value="#242424" />
                                    </Style>
                                </ListView.ItemContainerStyle>

                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid HorizontalAlignment="Left" >
                                            <DockPanel Width="auto" LastChildFill="True" HorizontalAlignment="Stretch">

                                                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                                                    <TextBlock  Style="{StaticResource WhiteText}" Text="Name" HorizontalAlignment="Left"  TextWrapping="Wrap"  VerticalAlignment="Top" Width="80"  />
                                                    <TextBlock  Style="{StaticResource WhiteText}" Text="{Binding Name}" HorizontalAlignment="Stretch"  TextWrapping="Wrap"  VerticalAlignment="Top" />
                                                </StackPanel>

                                                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                                                    <TextBlock  Style="{StaticResource WhiteText}" Text="Ip" HorizontalAlignment="Left"  TextWrapping="Wrap"  VerticalAlignment="Top" Width="80" />
                                                    <TextBlock  Style="{StaticResource WhiteText}" Text="{Binding Ip}" HorizontalAlignment="Stretch"  TextWrapping="Wrap"  VerticalAlignment="Bottom"  />
                                                </StackPanel>

                                                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                                                    <TextBlock DockPanel.Dock="Left" Style="{StaticResource WhiteText}" Text="Tcp Latency" HorizontalAlignment="Left"  TextWrapping="Wrap"  VerticalAlignment="Top" Width="80" />
                                                    <TextBlock DockPanel.Dock="Top" Style="{StaticResource WhiteText}"  Text="{Binding TcpLatency, StringFormat=N1}" HorizontalAlignment="Stretch"  TextWrapping="Wrap"  VerticalAlignment="Bottom"  />
                                                </StackPanel>

                                                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                                                    <TextBlock Style="{StaticResource WhiteText}" Text="Udp Latency" HorizontalAlignment="Left"  TextWrapping="Wrap"  VerticalAlignment="Top" Width="80" />
                                                    <TextBlock DockPanel.Dock="Top" Style="{StaticResource WhiteText}" Text="{Binding UdpLatency, StringFormat=N1}" HorizontalAlignment="Stretch"  TextWrapping="Wrap"  VerticalAlignment="Bottom"  />
                                                </StackPanel>

                                            </DockPanel>

                                        </Grid>

                                    </DataTemplate>

                                </ListView.ItemTemplate>


                            </ListView>
                            <Button Content="Call Selected" HorizontalAlignment="Left"  VerticalAlignment="Bottom" Height="32" Width="177" Command="{Binding MainWindowViewModel.CallSelectedCommand }" Margin="10,0,0,37"/>
                            <TextBlock HorizontalAlignment="Left" Margin="10,28,0,0" TextWrapping="Wrap" Text="Online Peers" VerticalAlignment="Top" Width="177"/>
                            <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" TextWrapping="Wrap" Text="Status:" VerticalAlignment="Top" Width="177"/>
                            <TextBox Text="{Binding MainWindowViewModel.CallStatus}" Height="18" Width="111"  BorderThickness="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="79,0,0,0" />

                        </Grid>
                    </Grid>

                    <GridSplitter HorizontalAlignment="Right" VerticalAlignment="Stretch" Grid.Column="1" ResizeBehavior="PreviousAndNext" Width="5" Background="#181818"/>
                    <!--Camera Image-->
                    <Grid Grid.Column="2">
                        <Grid >
                            <Image x:Name="MainVideoCanvas" HorizontalAlignment="Left" Height="auto" Margin="10,10,0,75" VerticalAlignment="Top" Width="auto" Source="{Binding MainWindowViewModel.PrimaryCanvasSource }" />
                            <Grid>
                                <Image x:Name="Ft3aryVideoCanvas" HorizontalAlignment="Right" Height="122" Margin="10,10,0,0" VerticalAlignment="Top" Width="167" Source="{Binding MainWindowViewModel.SecondaryCanvasSource }"/>
                            </Grid>
                        </Grid>

                        <Button Content="EndCall" Visibility="{Binding MainWindowViewModel.EndCallVisibility, Converter={StaticResource BoolToVis}}" HorizontalAlignment="Left"  VerticalAlignment="Bottom" Height="32" Width="56" Command="{Binding MainWindowViewModel.EndCallCommand }" Margin="10,0,0,36"/>
                        <Label Content="Share Screen" Visibility="{Binding MainWindowViewModel.EndCallVisibility, Converter={StaticResource BoolToVis}}" HorizontalAlignment="Left" Margin="82,0,0,39" VerticalAlignment="Bottom" FontWeight="Bold"/>
                        <ToggleButton  Style="{StaticResource ToggleSwitch}" Visibility="{Binding MainWindowViewModel.EndCallVisibility, Converter={StaticResource BoolToVis}}" HorizontalAlignment="Left" Margin="164,0,0,36" VerticalAlignment="Bottom" Width="78" Height="32" 
                          IsChecked="{Binding MainWindowViewModel.ShareScreenChecked,Mode=TwoWay}" />

                    </Grid>

                    <GridSplitter HorizontalAlignment="Right" VerticalAlignment="Stretch" Grid.Column="3" ResizeBehavior="PreviousAndNext" Width="5" Background="#181818" />
                    <!--Chat-->
                    <Grid Background="#202020" Grid.Column="4" AllowDrop="True" Drop="MessageWindow_Drop" HorizontalAlignment="Stretch"  >
                        <Grid x:Name="ChatGrid" Margin="10,67,5,90" >

                            <ListView x:Name="ChatView" ItemsSource ="{Binding MainWindowViewModel.ChatData}" Background="Black"  BorderThickness="0" ScrollViewer.CanContentScroll="False" ScrollViewer.ScrollChanged="ChatView_ScrollChanged">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Style.Triggers>
                                            <Trigger Property="Control.IsMouseOver" Value="True">
                                                <Setter Property="Control.Background" Value="Transparent" />
                                            </Trigger>
                                        </Style.Triggers>
                                        <Setter Property="BorderBrush" Value="Transparent" />
                                        <Setter Property="BorderThickness" Value="0" />

                                        <Setter Property="Background" Value="Black" />
                                        <Setter Property="Foreground" Value="Transparent" />
                                        <Setter Property="Focusable" Value="false"/>
                                        <Setter Property="HorizontalAlignment" Value="{Binding Allignment}" />
                                    </Style>

                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid HorizontalAlignment="Left" MaxWidth="{Binding ElementName=ChatGrid,Path=ActualWidth }" >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="5*" />
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid Grid.Column="0">

                                                <!--Margin="-3,20,-3,0"-->
                                                <Rectangle Margin="-5,-3,-5,-5" Fill="Black" HorizontalAlignment="Stretch" Height="auto" Stroke="Transparent" VerticalAlignment="Stretch" Width="auto" RadiusX="3.944" RadiusY="3.944"/>
                                                <Rectangle Margin="{Binding RectMargin}"  HorizontalAlignment="Stretch" Height="auto" Stroke="Transparent" VerticalAlignment="Stretch" Width="auto" RadiusX="3.944" RadiusY="3.944">
                                                    <Rectangle.Fill>
                                                        <SolidColorBrush Color="{Binding BackgroundColor}"/>
                                                    </Rectangle.Fill>
                                                </Rectangle>

                                                <StackPanel Margin="5,0,0,0">
                                                    <TextBlock Margin="0,0,0,0" Style="{StaticResource WhiteText}" Text="{Binding Sender}" HorizontalAlignment= "{Binding Allignment}"  TextWrapping="Wrap"  VerticalAlignment="Center" Foreground="DimGray"
                                                               Height="{Binding SenderTextHeight}"/>

                                                    <StackPanel Margin="0,10,10,0">
                                                        <TextBox BorderThickness="0" Style="{StaticResource BorderlessTextBox}" IsReadOnly="True"   Text="{Binding Message, Mode=OneWay}" HorizontalAlignment= "Left"  TextWrapping="Wrap"  VerticalAlignment="Center"  FontSize="14"/>
                                                        <TextBlock VerticalAlignment="Center" Height="{Binding URIHeight}">
                                                    <Hyperlink NavigateUri="{Binding URI}" RequestNavigate="OnHyperlinkClicked" Foreground="DodgerBlue">
                                                        <!--<TextBlock Text="{Binding URI}" FontSize="14" />-->
                                                        <TextBlock TextWrapping="Wrap" TextDecorations="Underline"><Run FontWeight="Bold" Text="{Binding URI}" /></TextBlock>
                                                    </Hyperlink>                
                                                </TextBlock>
                                                        <TextBlock Margin="0,10,0,0" Style="{StaticResource WhiteText}"  Text="{Binding Time}" HorizontalAlignment= "{Binding Allignment}"  TextWrapping="Wrap"  VerticalAlignment="Center" Foreground="DimGray" />

                                                    </StackPanel>
                                                </StackPanel>
                                            </Grid>
                                        </Grid>

                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>

                        </Grid>


                        <Label x:Name="WriteMsgGhostText" Content="{Binding MainWindowViewModel.SelectedPeerText}" HorizontalAlignment="Left" Margin="16,0,0,27" VerticalAlignment="Bottom" Width="auto"/>

                        <Button Content="➣" FontSize="30" HorizontalAlignment="Right" Margin="0,0,5,10" VerticalAlignment="Bottom"  Height="61" Width="45" Command="{Binding MainWindowViewModel.SendTextCommand }" />
                        <TextBox Style="{StaticResource RoundTextBox}" x:Name="ChatMessageBox"  TextWrapping="Wrap" Height="61" Margin="10,0,55,10" Width=" auto" MinWidth="50" VerticalAlignment="Bottom"   PreviewKeyDown ="OnKeyDownHandler" Foreground="White" Background="#262626" CaretBrush="White" FontWeight="Bold" Opacity="0.8"  AcceptsReturn="True" BorderBrush="DimGray" 
                                 Text="{Binding MainWindowViewModel.ChatInputText, Mode=TwoWay }" FontSize="14" GotFocus="ChatMessageBox_GotFocus" LostFocus="ChatMessageBox_LostFocus"/>

                        <Rectangle  Height="53" Margin="10,10,5,0" Stroke="#FFCEC7C7" VerticalAlignment="Top" Width="auto"  StrokeThickness="2" RadiusX="5.259" RadiusY="5.259" />
                        <Button  Content="╳" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Margin="15,16,0,0" Width="20" FontSize="8" 
                                 Visibility="{Binding MainWindowViewModel.FTCancelBtnVisibility,Converter={StaticResource BoolToVis}}"
                                 Command="{Binding MainWindowViewModel.FTCancelCmd}"/>

                        <!--<Label Content="Drag &amp; Drop Folder or File.." HorizontalAlignment="Left" Margin="10,11,0,0" VerticalAlignment="Top" Width="222"/>-->
                        <ProgressBar x:Name="FileProgress" HorizontalAlignment="Stretch" Height="12" Margin="40,20,10,0" VerticalAlignment="Top" Width="auto" Background="#202020" BorderBrush="Transparent"
                                                    Value="{Binding MainWindowViewModel.FTProgressPercent}" Foreground="WhiteSmoke"/>
                        <!--<TextBlock Foreground="Black" Margin="40,16,0,0" Text="{Binding ElementName=FileProgress, Path=Value, StringFormat={}{0:0}%}"
                                   HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12" FontWeight="Bold"/>-->
                        <TextBlock Foreground="Black" Margin="45,17,0,0" Text="{Binding MainWindowViewModel.FTProgressRatio}"
                                   HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12" FontWeight="Bold"/>
                        <Label x:Name="FTProgressText" HorizontalAlignment="left" Margin="10,34,0,0" VerticalAlignment="Top" Width="auto" 
                               Content="{Binding MainWindowViewModel.FTProgressText }"/>

                    </Grid>
                    <Button x:Name="ChatHideButton" Content="&gt;&gt;" HorizontalAlignment="Left" Margin="-21,0,0,2" VerticalAlignment="Bottom" Grid.Column="3" Click="ChatHideButton_Click" Width=" 20"/>


                </Grid>

            </TabItem>

            <!--Settings-->
            <TabItem Header="Settings" Width="80" Height="30" Foreground="WhiteSmoke">
                <Grid Background="#FF1E1E1E">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            
                            <Grid>
                            <StackPanel Orientation="Horizontal">
                                <!--Top Left-->
                                <StackPanel>
                                    <!--Top Left Upper-->
                                    <StackPanel Orientation="Horizontal">
                                        <!--Top Left Left-->
                                        <StackPanel>
                                                
                                                <!--Ip/Host-->
                                            <StackPanel Orientation="Horizontal" Margin="20,30,0,0">
                                                <Label Content="IP/Host" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top"/>
                                                <TextBox x:Name="IpText" HorizontalAlignment="Left" Margin="20,4,0,0" TextWrapping="Wrap"
                                                            Text="{Binding SettingsViewModel.Config.Ip}" VerticalAlignment="Top" Width="120" 
                                                         ToolTip="Ip/Hostname of the Relay Server"/>
                                            </StackPanel>
                                            
                                            <!--Port-->
                                            <StackPanel Orientation="Horizontal" Margin="20,15,0,0">
                                                <Label Content="Port" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top"/>
                                                <TextBox x:Name="PortText" HorizontalAlignment="Left" Margin="37,4,0,0" TextWrapping="Wrap"
                                                            Text="{Binding SettingsViewModel.Config.Port}" VerticalAlignment="Top" Width="120" 
                                                         ToolTip="Port of the Relay Server"/>
                                            </StackPanel>
                                        </StackPanel>
                                        <!--Top Left Right-->
                                        <StackPanel>
                                            <!--User Name-->
                                            <StackPanel Orientation="Horizontal" Margin="38,30,0,0">
                                                <Label  Content="UserName" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top"/>
                                                <TextBox x:Name="UserName" HorizontalAlignment="Left" Margin="27,4,0,0" TextWrapping="Wrap"
                                                           Text="{Binding SettingsViewModel.Config.Name}" VerticalAlignment="Top" Width="120" 
                                                         ToolTip="Your Username"/>
                                            </StackPanel>
                                            <!--Transport Layer-->
                                            <StackPanel Orientation="Horizontal" Margin="38,13,0,0">
                                                <Label Content="Transport Layer" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top"
                                                       ToolTip="You can switch during call"/>
                                                <ComboBox HorizontalAlignment="Left" IsSynchronizedWithCurrentItem="True"
                                                           Margin="1,4,0,0" VerticalAlignment="Top" Width="120" IsReadOnly="True" 
                                                           SelectedItem="{Binding SettingsViewModel.TransportLayer,Mode=TwoWay}"  >
                                                           <ComboBoxItem  Content="Udp" IsSelected="True"/>
                                                           <ComboBoxItem  Content="Tcp"/>
                                                </ComboBox>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                    <!--Top Left Lower-->
                                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                                        
                                        <!--Buttons-->
                                        <StackPanel Margin="10,20,0,0">
                                                <Button Content="Search" HorizontalAlignment="Left" Margin="0,10,0,0" 
                                                    VerticalAlignment="Top"  Width="78"
                                                    Command="{Binding SettingsViewModel.SearchServerClicked}" >
                                                    <Button.Effect>
                                                        <DropShadowEffect/>
                                                    </Button.Effect>
                                                </Button>
                                                <Button Content="Connect" HorizontalAlignment="Left" Margin="0,20,0,0" 
                                                    VerticalAlignment="Top"  Width="78" 
                                                    Command="{Binding SettingsViewModel.ConnectButtonClickCommand}" >
                                                    <Button.Effect>
                                                        <DropShadowEffect/>
                                                    </Button.Effect>
                                            </Button>
                                            <Button Content="Disconnect" HorizontalAlignment="Left" Margin="0,20,0,0" 
                                                    VerticalAlignment="Top"  Width="78"
                                                    Command="{Binding SettingsViewModel.DisconnectButtonClickCommand}" >
                                                    <Button.Effect>
                                                        <DropShadowEffect/>
                                                    </Button.Effect>
                                            </Button>
                                            <Button Content="TryPunchHole" HorizontalAlignment="Left" Margin="0,20,0,0" 
                                                    VerticalAlignment="Top" Width="79"
                                                    Command="{Binding SettingsViewModel.HolePunchClickCommand}" >
                                                    <Button.Effect>
                                                       <DropShadowEffect/>
                                                    </Button.Effect>
                                            </Button>
                                        </StackPanel>
                                        <!--Latency + Log window-->
                                        <StackPanel Margin="20,10,0,0">
                                            <StackPanel Orientation="Horizontal" Margin="2,0,0,0">
                                                <TextBlock x:Name="ServerTcpLatency" HorizontalAlignment="Left" Margin="0,0,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="180"
                                                        Text="{Binding SettingsViewModel.TcpLatency,StringFormat=N1}"/>
                                                <TextBlock x:Name="ServerUdpLatency" HorizontalAlignment="Left" Margin="0,0,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="180"
                                                        Text="{Binding SettingsViewModel.UdpLatency,StringFormat=N1}"/>
                                            </StackPanel>
                                            <TextBox x:Name="Status" HorizontalAlignment="Left" Margin="0,5,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="356" Height="125" 
                                                     Text="{Binding SettingsViewModel.LogText}" TextChanged="Status_TextChanged"/>
                                        </StackPanel>
                                    </StackPanel>

                                </StackPanel>
                                <!--Top Right-->
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel Margin="40,34,0,0">
                                            <CheckBox Content="Auto Reconnect" Foreground="WhiteSmoke" Margin="0,0,0,0"  
                                                IsChecked="{Binding  SettingsViewModel.Config.AutoReconnect}" Height="20"/>
                                            <CheckBox Content="Auto HolePunch" Foreground="WhiteSmoke" Margin="0,20,0,0" 
                                                IsChecked="{Binding  SettingsViewModel.Config.AutoHolepunch}" Height="20"/>
                                            <CheckBox Content="Auto AcceptCalls" Foreground="WhiteSmoke" Margin="0,20,0,0" 
                                                IsChecked="{Binding  SettingsViewModel.Config.AutoAcceptCalls}" Height="20"/>

                                        </StackPanel>
                                        <StackPanel Margin="50,34,0,0">
                                            <!--<Button Content="Get Ip With Proxy" HorizontalAlignment="Left" Margin="0,38,0,0" VerticalAlignment="Top" Width="104" 
                                                Command="{Binding SettingsViewModel.HTTPProxtIpCommand}"/>-->
                                            <Button Content="Show Debug Log" HorizontalAlignment="Left" Margin="5,0,0,0" VerticalAlignment="Top" Width="112" 
                                                Click="ShowDebugWindow"/>
                                            <Button Content="Clear Chat History" HorizontalAlignment="Left" Margin="5,20,0,0" VerticalAlignment="Top" Width="112"
                                                Command="{Binding SettingsViewModel.ClearChatHistoryCommand}"/>

                                            <Label  Content="File Transport Layer" HorizontalAlignment="Left" Margin="0,38,0,0" VerticalAlignment="Top"/>
                                            <ComboBox HorizontalAlignment="Left" IsSynchronizedWithCurrentItem="True"
                                                           Margin="5,4,0,0" VerticalAlignment="Top" Width="112" IsReadOnly="True" 
                                                           SelectedItem="{Binding SettingsViewModel.FTTransportLayer,Mode=TwoWay}"  >
                                                <ComboBoxItem  Content="Udp"/>
                                                <ComboBoxItem  Content="Tcp" IsSelected="True"/>
                                            </ComboBox>

                                            <Label  Content="FT Window Size" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top"/>
                                            <TextBox HorizontalAlignment="Left" Margin="5,0,0,0" TextWrapping="Wrap"
                                            Text="{Binding SettingsViewModel.Config.FTWindowSize}" VerticalAlignment="Top" Width="112" 
                                                     ToolTip="Represents how many unacklowledged bytes are allowed during file transfer"/>
                                            
                                            <Label  Content="FT Chunk Size" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top"/>
                                            <TextBox x:Name="FtChunk" HorizontalAlignment="Left" Margin="5,0,0,0" TextWrapping="Wrap"
                                            Text="{Binding SettingsViewModel.Config.ChunkSize}" VerticalAlignment="Top" Width="112" 
                                                     ToolTip="Represents File Chunk size. Files are chunked and send"/>
                                            
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            <Rectangle HorizontalAlignment="Left" Height="280"  Stroke="DimGray" VerticalAlignment="Top" Width="802" RadiusX="0" RadiusY="0" Margin="0,2,0,2"/>
                        </Grid>
                            <Image HorizontalAlignment="Left" Height="auto" MaxHeight="280" Margin="2,2,0,2" VerticalAlignment="Top" Width="auto" Source="{Binding MainWindowViewModel.PrimaryCanvasSource }" />

                        </StackPanel>
                        <!--Bottom-->
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Bottom" Height="350" >
                            <StackPanel Orientation="Horizontal" >
                                <Grid HorizontalAlignment="Left" Width="400">
                                    <StackPanel>
                                        <Label Content="Camera Settings" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Top" FontWeight="Bold"/>
        
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,-10">
                                            <Label Content="FPS" HorizontalAlignment="Left" Margin="0,-5,20,0" VerticalAlignment="Top"/>
                                            <Slider Margin="0,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="150" AutoToolTipPlacement="TopLeft" AutoToolTipPrecision="3" Minimum="5" Maximum="60" 
                                            Value="{Binding SettingsViewModel.FpsSliderValue}"/>
                                        </StackPanel>
                                        
                                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0"
                                                    ToolTip="Device Index in your system.&#x0a;Use if you have multiple cameras">
                                            <Label Content="Camera Index: " Margin="0,0,45,0" HorizontalAlignment="Left"/>
                                            <TextBox Text="{Binding SettingsViewModel.Config.CameraIndex}" Margin="0,4,10,0" Width="60" Height="20" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                                            <Label Content="Capture Width: " Margin="0,0,40,0" HorizontalAlignment="Left"/>
                                            <TextBox Text="{Binding SettingsViewModel.Config.CamFrameWidth}" Margin="0,4,10,0" Width="60" Height="20" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                                            <Label Content="Capture Height: " Margin="0,0,36,0" HorizontalAlignment="Left"/>
                                            <TextBox Text="{Binding SettingsViewModel.Config.CamFrameHeight}" Margin="0,4,10,0" Width="60" Height="20" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                        </StackPanel>
                                        
                                        <Label Content="H264 Encoding Settings" HorizontalAlignment="Left" Margin="6,10,0,-10" VerticalAlignment="Top" FontWeight="DemiBold"/>
                                        <Rectangle Stroke="DimGray" Width="190" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2,10,0,0"/>
                                        <CheckBox IsChecked="{Binding SettingsViewModel.Config.EnableCongestionAvoidance, Mode=TwoWay}"  Content="Enable Congestion Aviodance" Foreground="WhiteSmoke"
                                                  Margin="5,10,0,-0" Height="20" HorizontalAlignment="Left" VerticalAlignment="Top"
                                                  ToolTip="Activates congestion avoidance algorithms. Reduces the image quality if congestion is detected.&#x0a;If you are having long distance call over Internet its recommended"/>
                                        <CheckBox IsChecked="{Binding SettingsViewModel.Config.ReliableIDR, Mode=TwoWay}"  Content="Reliable IDR" Foreground="WhiteSmoke"
                                                  Margin="5,5,0,-0" Height="20" HorizontalAlignment="Left" VerticalAlignment="Top"
                                                  ToolTip="Enables reliable sends on I(Intra) and IDR(Instantaneous Decoder Refresh) frames."/>
                                       
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0"
                                                    ToolTip="Represents in how many frames, an IDR(Instantaneous Decoder Refresh) Frame will be forced on encoder.&#x0a; Provides better stability on lossy connections, but increases the bandwith&#x0a;use -1 for automatic" >
                                            <Label Content="IDR Interval: " Margin="0,0,16,0" HorizontalAlignment="Left" Width="106"/>
                                            <TextBox Text="{Binding SettingsViewModel.Config.IdrInterval}" Margin="10,4,10,0" Width="60," Height="20" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0"
                                                    ToolTip="Target bitrate of the encoder. Encoder tries to stay under this limit by rate control">
                                            <Label Content="Target Kbps: " Margin="0,0,16,0" HorizontalAlignment="Left" Width="130"/>
                                            <TextBox Text="{Binding SettingsViewModel.Config.TargetBps}" Margin="-14,4,10,0" Width="60" Height="20" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0"
                                                    ToolTip="Minimum bitrate of the encoder. Congestion avoidance will not drop below this rate">
                                            <Label Content="Min Kbps: " Margin="0,0,16,0" HorizontalAlignment="Left" Width="130"/>
                                            <TextBox Text="{Binding SettingsViewModel.Config.MinBps}" Margin="-14,4,10,0" Width="60" Height="20" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0"
                                                    ToolTip="Default is recomended. Advanced disables frame skipping for rate control">
                                            
                                        </StackPanel>
                                    </StackPanel>
                                    <StackPanel>
                                     
                                        <Grid Width="200" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,30,0,0" Height="155" >
                                            <Label Content="Test" HorizontalAlignment="Left" Margin="8,0,0,0" VerticalAlignment="Bottom" Width="50"/>
                                            <ToggleButton x:Name="CamToggle" Style="{StaticResource ToggleSwitchStyleCam}"  HorizontalAlignment="Left" VerticalAlignment="Bottom" Height="19" Width="40" Background="IndianRed" 
                                                          Margin="40,0,0,2" WindowChrome.IsHitTestVisibleInChrome="True" 
                                                          IsChecked="{Binding SettingsViewModel.TestCamChecked,Mode=TwoWay}"/>
                                            <Label Content="{Binding SettingsViewModel.MaxBps}" HorizontalAlignment="Right" Margin="0,0,0,0" VerticalAlignment="Bottom" Width="120"
                                                   ToolTip="Represents actual max bitrate limit after congestion control"/>

                                            <Label Content="16x" Margin="-20,-10,0,0" HorizontalAlignment ="Center" VerticalAlignment="Top"/>
                                            <Label Content="12x" Margin="0,-10,8,0" HorizontalAlignment ="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                                <Label.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform/>
                                                        <SkewTransform/>
                                                        <RotateTransform Angle="90"/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </Label.RenderTransform>
                                            </Label>
                                            <Rectangle HorizontalAlignment="Left" Height="120" Stroke="DimGray" VerticalAlignment="Top" Width="160" Margin="10,10,0,0"/>
                                            <Image HorizontalAlignment="Left" Height="120" Margin="10,10,0,0" VerticalAlignment="Top" Width="160" Source="{Binding MainWindowViewModel.SecondaryCanvasSource }" />
                                        </Grid>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,0">
                                            <Label Content="Congestion" HorizontalAlignment="Right"></Label>
                                            <ProgressBar HorizontalAlignment="Right" Height="10" Margin="5,10,30,0" VerticalAlignment="Top" Width="85" Background="Black"
                                                    Value="{Binding SettingsViewModel.Congestion}" Foreground="DarkRed" Opacity="0.8"/>
                                        </StackPanel>
                                       
                                        <Grid HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,0,0">
                                            <StackPanel>
                                                <Rectangle Stroke="DimGray" Width="189" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,10,2,0"/>

                                                <Label Content="{Binding SettingsViewModel.ImageTransferRate}" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Bottom" Width="182"/>
                                                <Label Content="{Binding SettingsViewModel.OutgoingFrameRate}" HorizontalAlignment="Left" Margin="0,-10,0,0" VerticalAlignment="Top" Width="182"/>
                                                <Rectangle Stroke="DimGray" Width="189" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="{Binding SettingsViewModel.IncomingImageDataRate }" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" Width="182"/>
                                                <Label Content="{Binding SettingsViewModel.IncomingFrameRate}" HorizontalAlignment="Left" Margin="0,-10,0,0" VerticalAlignment="Top" Width="182"/>
                                                <Label Content="{Binding SettingsViewModel.AverageLatency}" HorizontalAlignment="Left" Margin="0,-10,0,0" VerticalAlignment="Top" Width="182"/>

                                            </StackPanel>
                                        </Grid>
                                    </StackPanel>
                                    <Button Content="Apply" HorizontalAlignment="Left" Margin="5,20,0,10" VerticalAlignment="Bottom" Width="185"
                                                Command="{Binding SettingsViewModel.ApplyCameraSettingsCmd}"/>
                                    <Rectangle HorizontalAlignment="Left" Height="350" Stroke="DimGray" VerticalAlignment="Center" Width="400" RadiusX="3.944" RadiusY="3.944"/>

                                </Grid>
                                <Grid Width="1"/>
                                <Grid HorizontalAlignment="Left" Width="200">
                                    <StackPanel>

                                        <TextBlock HorizontalAlignment="Center" Margin="5,5,0,9" TextWrapping="Wrap" 
                                             Text="Screen Capture Settings" VerticalAlignment="Top" FontWeight="Bold"/>

                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                                            <Label Content="Target Kbps: " Margin="0,0,16,0" HorizontalAlignment="Left" Width="140"/>
                                            <TextBox Text="{Binding SettingsViewModel.Config.SCTargetBps}" Margin="-24,4,10,0" Width="60" Height="20" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                                            <Label Content="Target Fps: " Margin="0,0,16,0" HorizontalAlignment="Left" Width="140"/>
                                            <TextBox Text="{Binding SettingsViewModel.Config.SCTargetFps}" Margin="-24,4,10,0" Width="60" Height="20" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                                            <Label Content="Screen Id: " Margin="0,0,16,0" HorizontalAlignment="Left" Width="106"
                                                   ToolTip="Determines which screen to capture on multi-monitor systems"/>
                                            <TextBox Text="{Binding SettingsViewModel.Config.ScreenId}" Margin="10,4,10,0" Width="60" Height="20" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                        </StackPanel>
                                       
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0"
                                                    ToolTip="Keep it 0 unless you have multi-gpu system">
                                            <Label Content="GPU Id: " Margin="0,0,16,0" HorizontalAlignment="Left" Width="106"/>
                                            <TextBox Text="{Binding SettingsViewModel.Config.GpuId}" Margin="10,4,10,0" Width="60," Height="20" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                        </StackPanel>
                                        
                                        
                                        <StackPanel Orientation="Vertical"
                                                     ToolTip="If Native Screen Resolution is bigger than selected,&#x0a;system will scale down to the limit while preserving the aspect ratio">
                                            <Label Content="Screen Capture Resolution Limit:" HorizontalAlignment="Left"
                                                   Margin="2,0,0,0" VerticalAlignment="Top"/>
                                            <ComboBox HorizontalAlignment="Left" Margin="8,2,0,0" VerticalAlignment="Top" Width="120" IsReadOnly="True" 
                                                    SelectedItem="{Binding SettingsViewModel.SCResolution}" IsSynchronizedWithCurrentItem="True">
                                                <ComboBoxItem Content="_2180p"/>
                                                <ComboBoxItem Content="_2080p"/>
                                                <ComboBoxItem Content="_1440p"/>
                                                <ComboBoxItem Content="_1180p" IsSelected="True"/>
                                                <ComboBoxItem Content="_1080p" />
                                                <ComboBoxItem Content="_960p" />
                                                <ComboBoxItem Content="_840p"/>
                                                <ComboBoxItem Content="_720p"/>
                                                <ComboBoxItem Content="_480p"/>
                                            </ComboBox>
                                            <!--TestSCChecked-->
                                        </StackPanel>
                                        <Label Content="H264 Configuration:" HorizontalAlignment="Left" Margin="2,0,0,0" VerticalAlignment="Top"/>
                                        <ComboBox HorizontalAlignment="Left" Margin="8,2,0,0" VerticalAlignment="Top" Width="120" IsReadOnly="True" 
                                                SelectedItem="{Binding SettingsViewModel.H264Config}" IsSynchronizedWithCurrentItem="True"
                                                  ToolTip="Screen capture is slower but not bitrate efficient. 
                                                           Camera capture is faster but requires more bandwidth">
                                            <ComboBoxItem Content="ScreenCapture" IsSelected="True"/>
                                            <ComboBoxItem Content="CameraCapture"/>
                                        </ComboBox>
                                        <CheckBox IsChecked="{Binding SettingsViewModel.Config.MultiThreadedScreenShare, Mode=TwoWay}"  Content="Enable Parallel Pipeline" Foreground="WhiteSmoke"
                                                  Margin="7,10,0,0" Height="20" HorizontalAlignment="Left" VerticalAlignment="Top"
                                                  ToolTip="Enables parallel pipeline for screen capture and encoding. Uses more CPU due to multithreding for better frame rate"/>
                                        <Grid Margin="-5,0,0,0">
                                            <Label Content="Test" HorizontalAlignment="Left" Margin="8,0,0,0" VerticalAlignment="Bottom" Width="50"/>
                                            <ToggleButton Style="{StaticResource ToggleSwitchStyleCam}"  HorizontalAlignment="Left" VerticalAlignment="Bottom" Height="19" Width="40" Background="IndianRed" 
                                                          Margin="40,0,0,2" WindowChrome.IsHitTestVisibleInChrome="True" 
                                                          IsChecked="{Binding SettingsViewModel.TestSCChecked,Mode=TwoWay}"/>
                                        </Grid>
                                        

                                    </StackPanel>
                                    <Button Content="Apply" HorizontalAlignment="Left" Margin="5,0,0,10" VerticalAlignment="Bottom" Width="185"
                                     Command="{Binding SettingsViewModel.ApplyCameraSettingsCmd}"/>
                                    <Rectangle HorizontalAlignment="Left" Height="350" Margin="0,0,0,0" Stroke="DimGray" VerticalAlignment="Center" Width="200" RadiusX="4.167" RadiusY="4.167"/>
                                </Grid>
                                <Grid Width="1"/>
                                <Grid HorizontalAlignment="Left" Width="200">
                                    <StackPanel>
                                        <Label Content="Audio Settings" HorizontalAlignment="Center"  VerticalAlignment="Top" FontWeight="Bold"/>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox Foreground="WhiteSmoke" Content="Listen Yourself" HorizontalAlignment="Left" Margin="5,0,0,0" VerticalAlignment="Top" 
                                                IsChecked="{Binding SettingsViewModel.ListenYourselfCheck}"/>
                                            <!--<CheckBox Foreground="WhiteSmoke" Content="Use WASAPI" HorizontalAlignment="Left" Margin="5,0,0,0" VerticalAlignment="Top" 
                                                IsChecked="{Binding SettingsViewModel.Config.UseWasapi}"/>-->
                                        </StackPanel>

                                        <StackPanel Orientation="Vertical" Margin="0,0,0,0">
                                            <Label Content="Output Device: "></Label>
                                            <ComboBox Width="185" HorizontalAlignment="Left" Margin="5,0,0,0"
                                                      ItemsSource="{Binding Path= SettingsViewModel.InputDevices}"
                                                      DisplayMemberPath="Name"
                                                      SelectedItem="{Binding Path= SettingsViewModel.SelectedDevice}"></ComboBox>

                                        </StackPanel>

                                        <StackPanel Margin="0,0,0,0">
                                            <Label Content="Volume" HorizontalAlignment="Left" Margin="5,0,0,0" VerticalAlignment="Top"/>
                                            <Slider HorizontalAlignment="Left" Margin="5,0,0,0" VerticalAlignment="Top" Width="185" 
                                                    AutoToolTipPlacement="TopLeft" AutoToolTipPrecision="3"  Maximum="3"
                                            Value="{Binding SettingsViewModel.VolumeValue}"/>
                                        </StackPanel>


                                        <Label Content="Jitter Buffer Duration" HorizontalAlignment="Left" Margin="5,0,0,0" VerticalAlignment="Top"/>
                                        <Slider HorizontalAlignment="Left" Margin="5,0,0,0" VerticalAlignment="Top" Width="185" 
                                                AutoToolTipPlacement="TopLeft" AutoToolTipPrecision="3" Maximum="600" Minimum="60"
                                                Value="{Binding SettingsViewModel.BufferDurationValue}"
                                                ToolTip="Jitter buffer duration represents maximum allowed time to wait for a missing audio sample in miliseconds"/>

                                        <!--<TextBlock HorizontalAlignment="Center" Margin="0,10,0,0" TextWrapping="Wrap" Text="Audio Statistics"  FontWeight="Bold" VerticalAlignment="Top"/>-->
                                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                                            <TextBlock HorizontalAlignment="Left" Margin="5,0,0,0" TextWrapping="Wrap" Text="Buffer Level" VerticalAlignment="Top"/>
                                            <ProgressBar HorizontalAlignment="Left" Height="10" Margin="20,4,0,0" VerticalAlignment="Top" Width="100" Background="Black"
                                                    Value="{Binding SettingsViewModel.BufferedDurationPercentage}"
                                                         ToolTip="Total Audio time buffered. Its automatically adjusted depending on network jitter"/>

                                        </StackPanel>
                                       
                                        <TextBlock HorizontalAlignment="Left" Margin="5,0,0,0" TextWrapping="Wrap" 
                                                Text="{Binding SettingsViewModel.TotalNumLostPackages}" VerticalAlignment="Top"/>
                                        
                                        <StackPanel Margin="0,15,0,0">
                                            <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                                                <CheckBox Foreground="WhiteSmoke" Content="Enable Graph" HorizontalAlignment="Left" Margin="5,0,0,1" VerticalAlignment="Bottom" 
                                                IsChecked="{Binding SettingsViewModel.EnableSoundVisualPublish}"/>
                                                <StackPanel Margin="20,0,0,0">
                                                    <RadioButton Content="Pure Vawe" Foreground="WhiteSmoke" IsChecked="True"/>
                                                    <RadioButton Content="Rectified" Foreground="WhiteSmoke" IsChecked="{Binding SettingsViewModel.RectifiedSignalChecked}"/>
                                                </StackPanel>
                                                
                                            </StackPanel>

                                            <uc:SoundVisualizer Data="{Binding SettingsViewModel.SoudVisualData, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,85,-200,0"/>
                                            
                                        </StackPanel>
                                        
                                    </StackPanel>
                                    <Rectangle HorizontalAlignment="Left" Height="120"  Stroke="DimGray" VerticalAlignment="Bottom" Width="200" RadiusX="4.167" RadiusY="4.167"/>



                                    <!--<StackPanel Orientation="Horizontal">
                                        <uc:SoundVisualizer Data="{Binding SettingsViewModel.SoudVisualData, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,0,0"/>
                                    </StackPanel>-->
                                  
                                    <Rectangle HorizontalAlignment="Left" Height="350"  Stroke="DimGray" VerticalAlignment="Center" Width="200" RadiusX="4.167" RadiusY="4.167"/>

                                </Grid>
                                <!--<Image HorizontalAlignment="Left" Height="auto" Margin="2,2,0,57" VerticalAlignment="Top" Width="auto" Source="{Binding MainWindowViewModel.SecondaryCanvasSource }" />-->

                            </StackPanel>

                        </Grid>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>
        <Grid Grid.Row="1">
            <Label Content="Camera" HorizontalAlignment="Right" Margin="0,10,80,0" VerticalAlignment="Top" Background="#00000000" Foreground="#FFF7F7F7" FontWeight="Bold"/>
            <ToggleButton Style="{StaticResource CameraToggle}" x:Name="CameraButton" Content="Camera" HorizontalAlignment="Right" Margin="0,8,10,0" VerticalAlignment="Top" Width="78" Height="32"
                          IsChecked="{Binding MainWindowViewModel.CameraChecked,Mode=TwoWay}" />

            <Label Content="Microphone" HorizontalAlignment="Right" Margin="0,11,211,0" VerticalAlignment="Top" FontWeight="Bold"/>
            <ToggleButton Style="{StaticResource MicToggle}" x:Name="SoundButton" Content="Sound" HorizontalAlignment="Right" Margin="0,8,133,0" VerticalAlignment="Top" Width="78" Height="32" 
                          IsChecked="{Binding MainWindowViewModel.MicroponeChecked,Mode=TwoWay}" />
            <!--<Button Content="Button" HorizontalAlignment="Left" Margin="162,431,0,0" VerticalAlignment="Top" Click="Button_Click"/>-->

        </Grid>

    </Grid>

</Window>
